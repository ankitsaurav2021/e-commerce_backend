generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model for User module CRUD operations
model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String?
  role     String    @default("buyer") // can be buyer or seller
  orders   Order[]
  products Product[]
}

// Product model for Product module CRUD operations
model Product {
  id          Int         @id @default(autoincrement())
  code        String      @unique
  name        String
  description String?
  price       Float
  userId      Int // Reference to the seller
  user        User        @relation(fields: [userId], references: [id])
  variants    Variant[]
  orders      OrderItem[]
}

// Variant model for Variant module CRUD operations
model Variant {
  id            Int         @id @default(autoincrement())
  name          String
  priceModifier Float
  stock         Int
  productId     Int
  product       Product     @relation(fields: [productId], references: [id])
  OrderItem     OrderItem[]
}

// Order model for Order module CRUD operations
model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  status      String      @default("pending") // pending, accepted, cancelled
  totalAmount Float
  orderItems  OrderItem[]
}

// OrderItem model to handle order products
model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  variantId Int?
  quantity  Int
  price     Float
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  variant   Variant? @relation(fields: [variantId], references: [id])
}
